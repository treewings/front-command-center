{"ast":null,"code":"import _asyncToGenerator from\"/command-center/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/command-center/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/command-center/node_modules/@babel/runtime/regenerator/index.js\";import React from\"react\";import{Helmet}from\"react-helmet\";import{RoundedCard,TascomFooter,LineGraphic,ComposedBarGraphic}from\"../../components\";import{Loading,Error}from\"../../helper\";import useSurgeries from\"../../service/useSurgeries\";import useOperatedPatients from\"../../service/useOperatedPatients\";import useUtilities from\"../../service/useUtilities\";import useStatusSurgeries from\"../../service/useStatusSurgeries\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SurgicalCenter=function SurgicalCenter(){var timeInterval=5000;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),loading=_React$useState2[0],setLoading=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),error=_React$useState4[0],setError=_React$useState4[1];var _useUtilities=useUtilities(),getFontSize=_useUtilities.getFontSize;//Surgeries\nvar _useSurgeries=useSurgeries(),getSurgeries=_useSurgeries.getSurgeries;var refGetSurgeries=React.useRef(getSurgeries);var _React$useState5=React.useState(),_React$useState6=_slicedToArray(_React$useState5,2),surgeries=_React$useState6[0],setSurgeries=_React$useState6[1];React.useEffect(function(){setLoading(true);function executeRequest(){return _executeRequest.apply(this,arguments);}function _executeRequest(){_executeRequest=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$refGetSurgerie,surgeriesMonth;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return refGetSurgeries.current();case 3:_yield$refGetSurgerie=_context.sent;surgeriesMonth=_yield$refGetSurgerie.surgeriesMonth;setSurgeries(surgeriesMonth);setError(false);_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);setError(_context.t0.message);case 12:_context.prev=12;setLoading(false);return _context.finish(12);case 15:case\"end\":return _context.stop();}}},_callee,null,[[0,9,12,15]]);}));return _executeRequest.apply(this,arguments);}executeRequest();var interval=setInterval(function(){executeRequest();},timeInterval);return function(){clearInterval(interval);};},[]);//Operated Patients\nvar _useOperatedPatients=useOperatedPatients(),getOperatedPatients=_useOperatedPatients.getOperatedPatients;var refGetOperatedPatients=React.useRef(getOperatedPatients);var _React$useState7=React.useState(),_React$useState8=_slicedToArray(_React$useState7,2),operatedPatients=_React$useState8[0],setOperatedPatients=_React$useState8[1];var _React$useState9=React.useState([]),_React$useState10=_slicedToArray(_React$useState9,2),operationsEU=_React$useState10[0],setOperationsEU=_React$useState10[1];React.useEffect(function(){setLoading(true);function executeRequest(){return _executeRequest2.apply(this,arguments);}function _executeRequest2(){_executeRequest2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$refGetOperated,totOperated,operations;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return refGetOperatedPatients.current();case 3:_yield$refGetOperated=_context2.sent;totOperated=_yield$refGetOperated.totOperated;operations=_yield$refGetOperated.operations;setOperatedPatients(totOperated);setOperationsEU(operations);setError(false);_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);setError(_context2.t0.message);case 14:_context2.prev=14;setLoading(false);return _context2.finish(14);case 17:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11,14,17]]);}));return _executeRequest2.apply(this,arguments);}executeRequest();var interval=setInterval(function(){executeRequest();},timeInterval);return function(){clearInterval(interval);};},[]);//Status Surgeries\nvar _useStatusSurgeries=useStatusSurgeries(),getStatusSurgeries=_useStatusSurgeries.getStatusSurgeries;var refGetStatusSurgeries=React.useRef(getStatusSurgeries);var _React$useState11=React.useState([]),_React$useState12=_slicedToArray(_React$useState11,2),statusSurgeries=_React$useState12[0],setStatusSurgeries=_React$useState12[1];React.useEffect(function(){setLoading(true);function executeRequest(){return _executeRequest3.apply(this,arguments);}function _executeRequest3(){_executeRequest3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _yield$refGetStatusSu,status;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return refGetStatusSurgeries.current();case 3:_yield$refGetStatusSu=_context3.sent;status=_yield$refGetStatusSu.status;setStatusSurgeries(status);setError(false);_context3.next=12;break;case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](0);setError(_context3.t0.message);case 12:_context3.prev=12;setLoading(false);return _context3.finish(12);case 15:case\"end\":return _context3.stop();}}},_callee3,null,[[0,9,12,15]]);}));return _executeRequest3.apply(this,arguments);}executeRequest();var interval=setInterval(function(){executeRequest();},timeInterval);return function(){clearInterval(interval);};},[]);//Configurations from charts\nvar configLineChart=[{key:\"eletivo\",color:\"#47B900\",title:/*#__PURE__*/_jsx(\"span\",{style:{display:\"inline-flex\"},children:\" Eletivo \"})},{key:\"urgencia\",color:\"#11528B\",title:/*#__PURE__*/_jsx(\"span\",{style:{display:\"inline-flex\"},children:\" Urg\\xEAncia \"})}];var configBarChart={bars:[{key:\"agendado\"},{key:\"realizado\"}],lines:[{key:\"cancelado\",color:\"#F32A28\"}],legends:[{title:\"Realizados\",color:\"#38A3D5\"},{title:\"Agendados\",color:\"#3FA500\"},{title:\"Cancelados\",color:\"#F32A28\"}]};if(loading)return/*#__PURE__*/_jsx(Loading,{});return/*#__PURE__*/_jsxs(\"main\",{className:\"min-h-screen w-full flex flex-col justify-center\",children:[/*#__PURE__*/_jsxs(Helmet,{children:[/*#__PURE__*/_jsx(\"title\",{children:\"CMDC | Centro Cir\\xFArgico\"}),/*#__PURE__*/_jsx(\"meta\",{name:\"description\",content:\"Dashboard principal com informa\\xE7\\xF5es gerais.\"})]}),/*#__PURE__*/_jsx(\"section\",{className:\"px-5 w-full flex-1 flex items-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-3 w-full max-w-7xl mx-auto my-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid sm:grid-cols-4 grid-cols-1 items-center gap-3\",children:[/*#__PURE__*/_jsx(RoundedCard,{data:surgeries&&surgeries,title:\"Total Procedimentos Cir\\xFArgicos M\\xEAs\",className:\"h-60 bg-opacity-50 col-span-1 shadow-inner-2\",roundedClass:\"w-42 h-42 text-3xl\",titleClass:\"text-sm\",barSize:1.2,rounded:{type:\"gradient\",color:\"#0FFF0A\",id:\"gdr-1\"},toolTipConfig:{title:\"Total Procedimentos Cirúrgicos Mês\",desc:\"Este card mostra o total de procedimentos cirúrgicos mensalmente. Observação: Existem pacientes que fazem mais de um procedimento no mesmo aviso de cirurgia.\"}}),/*#__PURE__*/_jsx(LineGraphic,{className:\"h-60 bg-opacity-50 sm:col-span-3 col-span-1 shadow-inner-2 text-sm\",data:operationsEU,value:operatedPatients,config:configLineChart,xKey:\"data\",title:\"Pacientes Operados M\\xEAs\",chartPosition:{top:1*getFontSize(),right:-2.2*getFontSize(),left:-2.1*getFontSize(),bottom:0.5*getFontSize()},legendPosition:{position:\"absolute\",marginTop:-4.1*getFontSize(),marginRight:2*getFontSize()},toolTipConfig:{title:\"Pacientes Operados Mês\",desc:\"Este gráfico mostra o total de pacientes operados mensalmente. Observação: O número de pacientes operados é menor, porque existem pacientes que fazem mais de um procedimento no mesmo aviso de cirurgia.\"}})]}),/*#__PURE__*/_jsx(ComposedBarGraphic,{className:\"h-80 bg-opacity-50 shadow-inner-2 col-span-1 text-sm\",data:statusSurgeries,config:configBarChart,title:\"Centro Cirúrgico\",toolTipConfig:{title:\"Centro Cirúrgico\",desc:\"Este gráfico mostra o quantitativo de cirurgias realizadas por dia durante o mês.\"}})]})}),/*#__PURE__*/_jsx(TascomFooter,{}),error&&/*#__PURE__*/_jsx(Error,{message:error})]});};export default SurgicalCenter;","map":{"version":3,"sources":["/command-center/src/pages/SurgicalCenter/SurgicalCenter.jsx"],"names":["React","Helmet","RoundedCard","TascomFooter","LineGraphic","ComposedBarGraphic","Loading","Error","useSurgeries","useOperatedPatients","useUtilities","useStatusSurgeries","SurgicalCenter","timeInterval","useState","loading","setLoading","error","setError","getFontSize","getSurgeries","refGetSurgeries","useRef","surgeries","setSurgeries","useEffect","executeRequest","current","surgeriesMonth","message","interval","setInterval","clearInterval","getOperatedPatients","refGetOperatedPatients","operatedPatients","setOperatedPatients","operationsEU","setOperationsEU","totOperated","operations","getStatusSurgeries","refGetStatusSurgeries","statusSurgeries","setStatusSurgeries","status","configLineChart","key","color","title","display","configBarChart","bars","lines","legends","type","id","desc","top","right","left","bottom","position","marginTop","marginRight"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n  RoundedCard,\r\n  TascomFooter,\r\n  LineGraphic,\r\n  ComposedBarGraphic,\r\n} from \"../../components\";\r\nimport { Loading, Error } from \"../../helper\";\r\nimport useSurgeries from \"../../service/useSurgeries\";\r\nimport useOperatedPatients from \"../../service/useOperatedPatients\";\r\nimport useUtilities from \"../../service/useUtilities\";\r\nimport useStatusSurgeries from \"../../service/useStatusSurgeries\";\r\n\r\nconst SurgicalCenter = () => {\r\n  const timeInterval = 5000;\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [error, setError] = React.useState(false);\r\n  const { getFontSize } = useUtilities();\r\n\r\n  //Surgeries\r\n  const { getSurgeries } = useSurgeries();\r\n  const refGetSurgeries = React.useRef(getSurgeries);\r\n  const [surgeries, setSurgeries] = React.useState();\r\n\r\n  React.useEffect(() => {\r\n    setLoading(true);\r\n    async function executeRequest() {\r\n      try {\r\n        const { surgeriesMonth } = await refGetSurgeries.current();\r\n        setSurgeries(surgeriesMonth);\r\n        setError(false);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    executeRequest();\r\n    const interval = setInterval(() => {\r\n      executeRequest();\r\n    }, timeInterval);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  //Operated Patients\r\n  const { getOperatedPatients } = useOperatedPatients();\r\n  const refGetOperatedPatients = React.useRef(getOperatedPatients);\r\n  const [operatedPatients, setOperatedPatients] = React.useState();\r\n  const [operationsEU, setOperationsEU] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    setLoading(true);\r\n    async function executeRequest() {\r\n      try {\r\n        const { totOperated, operations } =\r\n          await refGetOperatedPatients.current();\r\n        setOperatedPatients(totOperated);\r\n        setOperationsEU(operations);\r\n        setError(false);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    executeRequest();\r\n    const interval = setInterval(() => {\r\n      executeRequest();\r\n    }, timeInterval);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  //Status Surgeries\r\n  const { getStatusSurgeries } = useStatusSurgeries();\r\n  const refGetStatusSurgeries = React.useRef(getStatusSurgeries);\r\n  const [statusSurgeries, setStatusSurgeries] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    setLoading(true);\r\n    async function executeRequest() {\r\n      try {\r\n        const { status } = await refGetStatusSurgeries.current();\r\n        setStatusSurgeries(status);\r\n        setError(false);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    executeRequest();\r\n    const interval = setInterval(() => {\r\n      executeRequest();\r\n    }, timeInterval);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  //Configurations from charts\r\n  const configLineChart = [\r\n    {\r\n      key: \"eletivo\",\r\n      color: \"#47B900\",\r\n      title: <span style={{ display: \"inline-flex\" }}> Eletivo </span>,\r\n    },\r\n    {\r\n      key: \"urgencia\",\r\n      color: \"#11528B\",\r\n      title: <span style={{ display: \"inline-flex\" }}> Urgência </span>,\r\n    },\r\n  ];\r\n\r\n  const configBarChart = {\r\n    bars: [{ key: \"agendado\" }, { key: \"realizado\" }],\r\n    lines: [{ key: \"cancelado\", color: \"#F32A28\" }],\r\n    legends: [\r\n      { title: \"Realizados\", color: \"#38A3D5\" },\r\n      { title: \"Agendados\", color: \"#3FA500\" },\r\n      { title: \"Cancelados\", color: \"#F32A28\" },\r\n    ],\r\n  };\r\n\r\n  if (loading) return <Loading />;\r\n\r\n  return (\r\n    <main className=\"min-h-screen w-full flex flex-col justify-center\">\r\n      <Helmet>\r\n        <title>CMDC | Centro Cirúrgico</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Dashboard principal com informações gerais.\"\r\n        />\r\n      </Helmet>\r\n      <section className=\"px-5 w-full flex-1 flex items-center\">\r\n        <div className=\"flex flex-col gap-3 w-full max-w-7xl mx-auto my-6\">\r\n          <div className=\"grid sm:grid-cols-4 grid-cols-1 items-center gap-3\">\r\n            <RoundedCard\r\n              data={surgeries && surgeries}\r\n              title=\"Total Procedimentos Cirúrgicos Mês\"\r\n              className=\"h-60 bg-opacity-50 col-span-1 shadow-inner-2\"\r\n              roundedClass=\"w-42 h-42 text-3xl\"\r\n              titleClass=\"text-sm\"\r\n              barSize={1.2}\r\n              rounded={{ type: \"gradient\", color: \"#0FFF0A\", id: \"gdr-1\" }}\r\n              toolTipConfig={{\r\n                title: \"Total Procedimentos Cirúrgicos Mês\",\r\n                desc: \"Este card mostra o total de procedimentos cirúrgicos mensalmente. Observação: Existem pacientes que fazem mais de um procedimento no mesmo aviso de cirurgia.\",\r\n              }}\r\n            />\r\n            <LineGraphic\r\n              className=\"h-60 bg-opacity-50 sm:col-span-3 col-span-1 shadow-inner-2 text-sm\"\r\n              data={operationsEU}\r\n              value={operatedPatients}\r\n              config={configLineChart}\r\n              xKey=\"data\"\r\n              title=\"Pacientes Operados Mês\"\r\n              chartPosition={{\r\n                top: 1 * getFontSize(),\r\n                right: -2.2 * getFontSize(),\r\n                left: -2.1 * getFontSize(),\r\n                bottom: 0.5 * getFontSize(),\r\n              }}\r\n              legendPosition={{\r\n                position: \"absolute\",\r\n                marginTop: -4.1 * getFontSize(),\r\n                marginRight: 2 * getFontSize(),\r\n              }}\r\n              toolTipConfig={{\r\n                title: \"Pacientes Operados Mês\",\r\n                desc: \"Este gráfico mostra o total de pacientes operados mensalmente. Observação: O número de pacientes operados é menor, porque existem pacientes que fazem mais de um procedimento no mesmo aviso de cirurgia.\",\r\n              }}\r\n            />\r\n          </div>\r\n          <ComposedBarGraphic\r\n            className=\"h-80 bg-opacity-50 shadow-inner-2 col-span-1 text-sm\"\r\n            data={statusSurgeries}\r\n            config={configBarChart}\r\n            title={\"Centro Cirúrgico\"}\r\n            toolTipConfig={{\r\n              title: \"Centro Cirúrgico\",\r\n              desc: \"Este gráfico mostra o quantitativo de cirurgias realizadas por dia durante o mês.\",\r\n            }}\r\n          />\r\n        </div>\r\n      </section>\r\n      <TascomFooter />\r\n      {error && <Error message={error} />}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default SurgicalCenter;\r\n"]},"metadata":{},"sourceType":"module"}