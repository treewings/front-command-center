{"ast":null,"code":"import _asyncToGenerator from\"/command-center/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/command-center/node_modules/@babel/runtime/regenerator/index.js\";import{axios}from\"./api\";function useOperatedPatients(){function getOperatedPatients(){return _getOperatedPatients.apply(this,arguments);}function _getOperatedPatients(){_getOperatedPatients=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,json,operations;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"patients/operated\");case 3:response=_context.sent;json=response.data.operated_patients;operations=json.map(function(_ref){var ELETIVOS=_ref.ELETIVOS,URGENTES=_ref.URGENTES,DT_REALIZACAO=_ref.DT_REALIZACAO;return{eletivo:ELETIVOS,urgencia:URGENTES,data:DT_REALIZACAO.slice(0,5)};});return _context.abrupt(\"return\",{totOperated:json[0]?json[0].TOTAL_MES:0,operations:operations});case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);throw new Error(_context.t0.message);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return _getOperatedPatients.apply(this,arguments);}return{getOperatedPatients:getOperatedPatients};}export default useOperatedPatients;","map":{"version":3,"sources":["/command-center/src/service/useOperatedPatients.js"],"names":["axios","useOperatedPatients","getOperatedPatients","get","response","json","data","operated_patients","operations","map","ELETIVOS","URGENTES","DT_REALIZACAO","eletivo","urgencia","slice","totOperated","TOTAL_MES","Error","message"],"mappings":"6MAAA,OAASA,KAAT,KAAsB,OAAtB,CAEA,QAASC,CAAAA,mBAAT,EAA+B,SACdC,CAAAA,mBADc,mKAC7B,sMAE2BF,CAAAA,KAAK,CAACG,GAAN,CAAU,mBAAV,CAF3B,QAEUC,QAFV,eAGUC,IAHV,CAGiBD,QAAQ,CAACE,IAAT,CAAcC,iBAH/B,CAKQC,UALR,CAKqBH,IAAI,CAACI,GAAL,CAAS,kBAAGC,CAAAA,QAAH,MAAGA,QAAH,CAAaC,QAAb,MAAaA,QAAb,CAAuBC,aAAvB,MAAuBA,aAAvB,OAA4C,CACpEC,OAAO,CAAEH,QAD2D,CAEpEI,QAAQ,CAAEH,QAF0D,CAGpEL,IAAI,CAAEM,aAAa,CAACG,KAAd,CAAoB,CAApB,CAAuB,CAAvB,CAH8D,CAA5C,EAAT,CALrB,iCAWW,CACLC,WAAW,CAAEX,IAAI,CAAC,CAAD,CAAJ,CAAUA,IAAI,CAAC,CAAD,CAAJ,CAAQY,SAAlB,CAA8B,CADtC,CAELT,UAAU,CAAVA,UAFK,CAXX,+DAgBU,IAAIU,CAAAA,KAAJ,CAAU,YAAMC,OAAhB,CAhBV,qEAD6B,sDAqB7B,MAAO,CACLjB,mBAAmB,CAAnBA,mBADK,CAAP,CAGD,CAED,cAAeD,CAAAA,mBAAf","sourcesContent":["import { axios } from \"./api\";\r\n\r\nfunction useOperatedPatients() {\r\n  async function getOperatedPatients() {\r\n    try {\r\n      const response = await axios.get(\"patients/operated\");\r\n      const json = response.data.operated_patients;\r\n\r\n      let operations = json.map(({ ELETIVOS, URGENTES, DT_REALIZACAO }) => ({\r\n        eletivo: ELETIVOS,\r\n        urgencia: URGENTES,\r\n        data: DT_REALIZACAO.slice(0, 5),\r\n      }));\r\n\r\n      return {\r\n        totOperated: json[0] ? json[0].TOTAL_MES : 0,\r\n        operations,\r\n      };\r\n    } catch (error) {\r\n      throw new Error(error.message);\r\n    }\r\n  }\r\n\r\n  return {\r\n    getOperatedPatients,\r\n  };\r\n}\r\n\r\nexport default useOperatedPatients;\r\n"]},"metadata":{},"sourceType":"module"}