{"ast":null,"code":"import _defineProperty from\"/command-center/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/command-center/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/command-center/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/command-center/node_modules/@babel/runtime/regenerator/index.js\";import{axios}from\"./api\";function useGeneralPercent(){function getGeneralPercent(){return _getGeneralPercent.apply(this,arguments);}function _getGeneralPercent(){_getGeneralPercent=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,json,percents;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"total_beds_percent_unit\");case 3:response=_context.sent;json=response.data.total_beds_percent_unit;percents=json.reduce(function(acc,_ref){var TIPO=_ref.TIPO,OCUPACAO=_ref.OCUPACAO;var obj=_objectSpread(_objectSpread({},acc),{},_defineProperty({},TIPO,OCUPACAO));return obj;},{});return _context.abrupt(\"return\",{percents:percents});case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);throw new Error();case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return _getGeneralPercent.apply(this,arguments);}function getTotalUnit(){return _getTotalUnit.apply(this,arguments);}function _getTotalUnit(){_getTotalUnit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,totalUnit;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.get(\"total_beds_percent_general\");case 3:response=_context2.sent;totalUnit=response.data.total_beds_percent_general[0];return _context2.abrupt(\"return\",{totalUnit:_objectSpread(_objectSpread({},totalUnit),{},{TOH_ON_LINE:\"\".concat(Math.round(totalUnit.TOH_ON_LINE.replace(\"%\",\"\")),\"%\")})});case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);throw new Error();case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return _getTotalUnit.apply(this,arguments);}return{getGeneralPercent:getGeneralPercent,getTotalUnit:getTotalUnit};}export default useGeneralPercent;","map":{"version":3,"sources":["/command-center/src/service/useGeneralPercent.js"],"names":["axios","useGeneralPercent","getGeneralPercent","get","response","json","data","total_beds_percent_unit","percents","reduce","acc","TIPO","OCUPACAO","obj","Error","getTotalUnit","totalUnit","total_beds_percent_general","TOH_ON_LINE","Math","round","replace"],"mappings":"wZAAA,OAASA,KAAT,KAAsB,OAAtB,CAEA,QAASC,CAAAA,iBAAT,EAA6B,SACZC,CAAAA,iBADY,6JAC3B,oMAE2BF,CAAAA,KAAK,CAACG,GAAN,CAAU,yBAAV,CAF3B,QAEUC,QAFV,eAGUC,IAHV,CAGiBD,QAAQ,CAACE,IAAT,CAAcC,uBAH/B,CAKUC,QALV,CAKqBH,IAAI,CAACI,MAAL,CAAY,SAACC,GAAD,MAA6B,IAArBC,CAAAA,IAAqB,MAArBA,IAAqB,CAAfC,QAAe,MAAfA,QAAe,CACxD,GAAMC,CAAAA,GAAG,gCAAQH,GAAR,wBAAcC,IAAd,CAAqBC,QAArB,EAAT,CACA,MAAOC,CAAAA,GAAP,CACD,CAHgB,CAGd,EAHc,CALrB,iCAUW,CACLL,QAAQ,CAARA,QADK,CAVX,+DAcU,IAAIM,CAAAA,KAAJ,EAdV,qEAD2B,4DAmBZC,CAAAA,YAnBY,8IAmB3B,uMAE2Bf,CAAAA,KAAK,CAACG,GAAN,CAAU,4BAAV,CAF3B,QAEUC,QAFV,gBAGUY,SAHV,CAGsBZ,QAAQ,CAACE,IAAT,CAAcW,0BAAd,CAAyC,CAAzC,CAHtB,kCAKW,CACLD,SAAS,gCACJA,SADI,MAEPE,WAAW,WAAKC,IAAI,CAACC,KAAL,CAAWJ,SAAS,CAACE,WAAV,CAAsBG,OAAtB,CAA8B,GAA9B,CAAmC,EAAnC,CAAX,CAAL,KAFJ,EADJ,CALX,kEAYU,IAAIP,CAAAA,KAAJ,EAZV,uEAnB2B,+CAmC3B,MAAO,CACLZ,iBAAiB,CAAjBA,iBADK,CAELa,YAAY,CAAZA,YAFK,CAAP,CAID,CAED,cAAed,CAAAA,iBAAf","sourcesContent":["import { axios } from \"./api\";\r\n\r\nfunction useGeneralPercent() {\r\n  async function getGeneralPercent() {\r\n    try {\r\n      const response = await axios.get(\"total_beds_percent_unit\");\r\n      const json = response.data.total_beds_percent_unit;\r\n\r\n      const percents = json.reduce((acc, { TIPO, OCUPACAO }) => {\r\n        const obj = { ...acc, [TIPO]: OCUPACAO };\r\n        return obj;\r\n      }, {});\r\n\r\n      return {\r\n        percents,\r\n      };\r\n    } catch (error) {\r\n      throw new Error();\r\n    }\r\n  }\r\n\r\n  async function getTotalUnit() {\r\n    try {\r\n      const response = await axios.get(\"total_beds_percent_general\");\r\n      const totalUnit = response.data.total_beds_percent_general[0];\r\n\r\n      return {\r\n        totalUnit: {\r\n          ...totalUnit,\r\n          TOH_ON_LINE: `${Math.round(totalUnit.TOH_ON_LINE.replace(\"%\", \"\"))}%`\r\n        },\r\n      };\r\n    } catch (error) {\r\n      throw new Error();\r\n    }\r\n  }\r\n\r\n  return {\r\n    getGeneralPercent,\r\n    getTotalUnit\r\n  };\r\n}\r\n\r\nexport default useGeneralPercent;\r\n"]},"metadata":{},"sourceType":"module"}