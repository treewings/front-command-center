{"ast":null,"code":"import _slicedToArray from\"/command-center/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";function useScroll(ref){var numberOfScrolls=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;var time=arguments.length>2&&arguments[2]!==undefined?arguments[2]:3000;var handleEnd=arguments.length>3?arguments[3]:undefined;var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),scrollOne=_React$useState2[0],setScrollOne=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),scrollTwo=_React$useState4[0],setScrollTwo=_React$useState4[1];var memorizedHandleEnd=React.useRef(handleEnd);React.useEffect(function(){var _ref$current;(_ref$current=ref.current)===null||_ref$current===void 0?void 0:_ref$current.scrollTo({top:scrollTwo,behavior:\"smooth\"});setScrollOne(scrollTwo);},[scrollTwo,ref]);React.useEffect(function(){var _ref$current2;var sizeToScroll=Math.ceil(((_ref$current2=ref.current)===null||_ref$current2===void 0?void 0:_ref$current2.scrollHeight)/numberOfScrolls);var interval=setInterval(function(){var _ref$current3,_ref$current4;if(scrollOne<((_ref$current3=ref.current)===null||_ref$current3===void 0?void 0:_ref$current3.scrollHeight)-((_ref$current4=ref.current)===null||_ref$current4===void 0?void 0:_ref$current4.clientHeight)){setScrollTwo(function(scrollTwo){return scrollTwo+sizeToScroll;});}else{setScrollTwo(0);if(!!memorizedHandleEnd.current)memorizedHandleEnd.current();}},time);return function(){return clearInterval(interval);};},[ref,scrollOne,numberOfScrolls,time,memorizedHandleEnd]);}export{useScroll};","map":{"version":3,"sources":["/command-center/src/service/useScroll.js"],"names":["React","useScroll","ref","numberOfScrolls","time","handleEnd","useState","scrollOne","setScrollOne","scrollTwo","setScrollTwo","memorizedHandleEnd","useRef","useEffect","current","scrollTo","top","behavior","sizeToScroll","Math","ceil","scrollHeight","interval","setInterval","clientHeight","clearInterval"],"mappings":"qGAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,QAASC,CAAAA,SAAT,CAAmBC,GAAnB,CAAsE,IAA9CC,CAAAA,eAA8C,2DAA5B,EAA4B,IAAxBC,CAAAA,IAAwB,2DAAjB,IAAiB,IAAXC,CAAAA,SAAW,2CACpE,oBAAkCL,KAAK,CAACM,QAAN,CAAe,CAAf,CAAlC,oDAAOC,SAAP,qBAAkBC,YAAlB,qBACA,qBAAkCR,KAAK,CAACM,QAAN,CAAe,CAAf,CAAlC,qDAAOG,SAAP,qBAAkBC,YAAlB,qBACA,GAAMC,CAAAA,kBAAkB,CAAGX,KAAK,CAACY,MAAN,CAAaP,SAAb,CAA3B,CAEAL,KAAK,CAACa,SAAN,CAAgB,UAAM,kBACpB,cAAAX,GAAG,CAACY,OAAJ,oDAAaC,QAAb,CAAsB,CACpBC,GAAG,CAAEP,SADe,CAEpBQ,QAAQ,CAAE,QAFU,CAAtB,EAKAT,YAAY,CAACC,SAAD,CAAZ,CACD,CAPD,CAOG,CAACA,SAAD,CAAYP,GAAZ,CAPH,EASAF,KAAK,CAACa,SAAN,CAAgB,UAAM,mBACpB,GAAMK,CAAAA,YAAY,CAAGC,IAAI,CAACC,IAAL,CAAU,gBAAAlB,GAAG,CAACY,OAAJ,sDAAaO,YAAb,EAA4BlB,eAAtC,CAArB,CACA,GAAMmB,CAAAA,QAAQ,CAAGC,WAAW,CAAC,UAAM,iCACjC,GAAIhB,SAAS,CAAG,gBAAAL,GAAG,CAACY,OAAJ,sDAAaO,YAAb,kBAA4BnB,GAAG,CAACY,OAAhC,wCAA4B,cAAaU,YAAzC,CAAhB,CAAuE,CACrEd,YAAY,CAAC,SAACD,SAAD,QAAeA,CAAAA,SAAS,CAAGS,YAA3B,EAAD,CAAZ,CACD,CAFD,IAEO,CACLR,YAAY,CAAC,CAAD,CAAZ,CACA,GAAI,CAAC,CAACC,kBAAkB,CAACG,OAAzB,CAAkCH,kBAAkB,CAACG,OAAnB,GACnC,CACF,CAP2B,CAOzBV,IAPyB,CAA5B,CAQA,MAAO,kBAAMqB,CAAAA,aAAa,CAACH,QAAD,CAAnB,EAAP,CACD,CAXD,CAWG,CAACpB,GAAD,CAAMK,SAAN,CAAiBJ,eAAjB,CAAkCC,IAAlC,CAAwCO,kBAAxC,CAXH,EAYD,CACD,OAASV,SAAT","sourcesContent":["import React from \"react\";\r\n\r\nfunction useScroll(ref, numberOfScrolls = 10, time = 3000, handleEnd) {\r\n  const [scrollOne, setScrollOne] = React.useState(0);\r\n  const [scrollTwo, setScrollTwo] = React.useState(0);\r\n  const memorizedHandleEnd = React.useRef(handleEnd);\r\n\r\n  React.useEffect(() => {\r\n    ref.current?.scrollTo({\r\n      top: scrollTwo,\r\n      behavior: \"smooth\",\r\n    });\r\n\r\n    setScrollOne(scrollTwo);\r\n  }, [scrollTwo, ref]);\r\n\r\n  React.useEffect(() => {\r\n    const sizeToScroll = Math.ceil(ref.current?.scrollHeight / numberOfScrolls);\r\n    const interval = setInterval(() => {\r\n      if (scrollOne < ref.current?.scrollHeight - ref.current?.clientHeight) {\r\n        setScrollTwo((scrollTwo) => scrollTwo + sizeToScroll);\r\n      } else {\r\n        setScrollTwo(0);\r\n        if (!!memorizedHandleEnd.current) memorizedHandleEnd.current();\r\n      }\r\n    }, time);\r\n    return () => clearInterval(interval);\r\n  }, [ref, scrollOne, numberOfScrolls, time, memorizedHandleEnd]);\r\n}\r\nexport { useScroll };\r\n"]},"metadata":{},"sourceType":"module"}