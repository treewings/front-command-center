{"ast":null,"code":"import _objectSpread from\"/command-center/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/command-center/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _asyncToGenerator from\"/command-center/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _excluded=[\"STATUS\",\"QUANTIDADE\"];import _regeneratorRuntime from\"/command-center/node_modules/@babel/runtime/regenerator/index.js\";import{axios}from\"./api\";function useStatusSurgeries(){function getStatusSurgeries(){return _getStatusSurgeries.apply(this,arguments);}function _getStatusSurgeries(){_getStatusSurgeries=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,json,agendado,realizado,cancelado,status,i;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"surgeries_schedules_aborteds\");case 3:response=_context.sent;json=response.data.surgeries_schedules_aborteds;agendado=[];realizado=[];cancelado=[];status=[];json.forEach(function(_ref){var STATUS=_ref.STATUS,QUANTIDADE=_ref.QUANTIDADE,obj=_objectWithoutProperties(_ref,_excluded);if(STATUS===\"TOTAL_AGENDADO\"){agendado.push({agendado:QUANTIDADE,dia:obj[\"TO_CHAR(DATA_EVENTO,'DD/MM/YYYY')\"].slice(0,5)});}else if(STATUS===\"TOTAL_REALIZADO\"){realizado.push({realizado:QUANTIDADE});}else if(STATUS===\"TOTAL_CANCELADO\"){cancelado.push({cancelado:QUANTIDADE});}});for(i=0;agendado.length>i;i++){status.push(_objectSpread(_objectSpread(_objectSpread({},agendado[i]),realizado[i]),cancelado[i]));}return _context.abrupt(\"return\",{status:status});case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);throw new Error(_context.t0.message);case 17:case\"end\":return _context.stop();}}},_callee,null,[[0,14]]);}));return _getStatusSurgeries.apply(this,arguments);}return{getStatusSurgeries:getStatusSurgeries};}export default useStatusSurgeries;","map":{"version":3,"sources":["/command-center/src/service/useStatusSurgeries.js"],"names":["axios","useStatusSurgeries","getStatusSurgeries","get","response","json","data","surgeries_schedules_aborteds","agendado","realizado","cancelado","status","forEach","STATUS","QUANTIDADE","obj","push","dia","slice","i","length","Error","message"],"mappings":"gdAAA,OAASA,KAAT,KAAsB,OAAtB,CAEA,QAASC,CAAAA,kBAAT,EAA8B,SACbC,CAAAA,kBADa,gKAC5B,iOAE2BF,CAAAA,KAAK,CAACG,GAAN,CAAU,8BAAV,CAF3B,QAEUC,QAFV,eAGUC,IAHV,CAGiBD,QAAQ,CAACE,IAAT,CAAcC,4BAH/B,CAKUC,QALV,CAKqB,EALrB,CAMUC,SANV,CAMsB,EANtB,CAOUC,SAPV,CAOsB,EAPtB,CAQUC,MARV,CAQmB,EARnB,CAUIN,IAAI,CAACO,OAAL,CAAa,cAAoC,IAAjCC,CAAAA,MAAiC,MAAjCA,MAAiC,CAAzBC,UAAyB,MAAzBA,UAAyB,CAAVC,GAAU,0CAC/C,GAAIF,MAAM,GAAK,gBAAf,CAAiC,CAC/BL,QAAQ,CAACQ,IAAT,CAAc,CACZR,QAAQ,CAAEM,UADE,CAEZG,GAAG,CAAEF,GAAG,CAAC,mCAAD,CAAH,CAAyCG,KAAzC,CAA+C,CAA/C,CAAkD,CAAlD,CAFO,CAAd,EAID,CALD,IAKO,IAAIL,MAAM,GAAK,iBAAf,CAAkC,CACvCJ,SAAS,CAACO,IAAV,CAAe,CACbP,SAAS,CAAEK,UADE,CAAf,EAGD,CAJM,IAIA,IAAID,MAAM,GAAK,iBAAf,CAAkC,CACvCH,SAAS,CAACM,IAAV,CAAe,CACbN,SAAS,CAAEI,UADE,CAAf,EAGD,CACF,CAfD,EAiBA,IAASK,CAAT,CAAa,CAAb,CAAgBX,QAAQ,CAACY,MAAT,CAAkBD,CAAlC,CAAqCA,CAAC,EAAtC,CAA0C,CACxCR,MAAM,CAACK,IAAP,8CAAiBR,QAAQ,CAACW,CAAD,CAAzB,EAAiCV,SAAS,CAACU,CAAD,CAA1C,EAAkDT,SAAS,CAACS,CAAD,CAA3D,GACD,CA7BL,gCA+BW,CACLR,MAAM,CAANA,MADK,CA/BX,iEAmCU,IAAIU,CAAAA,KAAJ,CAAU,YAAMC,OAAhB,CAnCV,sEAD4B,qDAwC5B,MAAO,CACLpB,kBAAkB,CAAlBA,kBADK,CAAP,CAGD,CAED,cAAeD,CAAAA,kBAAf","sourcesContent":["import { axios } from \"./api\";\r\n\r\nfunction useStatusSurgeries() {\r\n  async function getStatusSurgeries() {\r\n    try {\r\n      const response = await axios.get(\"surgeries_schedules_aborteds\");\r\n      const json = response.data.surgeries_schedules_aborteds;\r\n\r\n      const agendado = [];\r\n      const realizado = [];\r\n      const cancelado = [];\r\n      const status = [];\r\n\r\n      json.forEach(({ STATUS, QUANTIDADE, ...obj }) => {\r\n        if (STATUS === \"TOTAL_AGENDADO\") {\r\n          agendado.push({\r\n            agendado: QUANTIDADE,\r\n            dia: obj[\"TO_CHAR(DATA_EVENTO,'DD/MM/YYYY')\"].slice(0, 5),\r\n          });\r\n        } else if (STATUS === \"TOTAL_REALIZADO\") {\r\n          realizado.push({\r\n            realizado: QUANTIDADE,\r\n          });\r\n        } else if (STATUS === \"TOTAL_CANCELADO\") {\r\n          cancelado.push({\r\n            cancelado: QUANTIDADE,\r\n          });\r\n        }\r\n      });\r\n\r\n      for (let i = 0; agendado.length > i; i++) {\r\n        status.push({ ...agendado[i], ...realizado[i], ...cancelado[i] });\r\n      }\r\n\r\n      return {\r\n        status,\r\n      };\r\n    } catch (error) {\r\n      throw new Error(error.message);\r\n    }\r\n  }\r\n\r\n  return {\r\n    getStatusSurgeries,\r\n  };\r\n}\r\n\r\nexport default useStatusSurgeries;\r\n"]},"metadata":{},"sourceType":"module"}