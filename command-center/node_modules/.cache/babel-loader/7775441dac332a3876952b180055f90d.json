{"ast":null,"code":"import _slicedToArray from\"/command-center/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import CountUp from\"react-countup\";import{ToolTip}from\"../\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CardClock(_ref){var data=_ref.data,title=_ref.title,toolTipConfig=_ref.toolTipConfig,className=_ref.className;var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),hours=_React$useState2[0],setHours=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),minutes=_React$useState4[0],setMinutes=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),tooltip=_React$useState6[0],setToolTip=_React$useState6[1];function mediumTime(times){var secondsTimes=times.map(function(time){var splitTime=time.split(\":\");var secondsTime=parseInt(splitTime[0])*3600+parseInt(splitTime[1])*60+parseInt(splitTime[2]);return secondsTime;});var fullTime=secondsTimes.reduce(function(acc,secondsTime){return acc+secondsTime;});var media=fullTime/times.length;var mediumTime=new Date(media*1000).toISOString().substr(11,8);var splitMediumTime=mediumTime.split(\":\").map(function(value){return Number(value);});return{hours:splitMediumTime[0],minutes:splitMediumTime[1],seconds:splitMediumTime[2]};}React.useEffect(function(){if(data&&!!data[0]){var time=mediumTime(data);setHours(time.hours);setMinutes(time.minutes);}},[data]);return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blackCMDC rounded-lg flex flex-col p-2 \".concat(className),children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-center text-xs font-semibold text-white mt-2\",children:/*#__PURE__*/_jsx(\"span\",{onMouseOver:function onMouseOver(){return setToolTip(true);},onMouseLeave:function onMouseLeave(){return setToolTip(false);},children:title})}),/*#__PURE__*/_jsx(ToolTip,{title:toolTipConfig&&toolTipConfig.title,display:toolTipConfig&&tooltip,desc:toolTipConfig&&toolTipConfig.desc}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-clock-circle w-28 h-28 bg-cover m-auto flex justify-center items-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs font-bold text-white\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xl\",children:/*#__PURE__*/_jsx(CountUp,{end:hours,duration:1})}),\"h\",/*#__PURE__*/_jsx(\"span\",{className:\"text-xl\",children:/*#__PURE__*/_jsx(CountUp,{end:minutes,duration:1})}),\"m\"]})})]});}export default CardClock;","map":{"version":3,"sources":["/command-center/src/components/Cards/CardClock.jsx"],"names":["React","CountUp","ToolTip","CardClock","data","title","toolTipConfig","className","useState","hours","setHours","minutes","setMinutes","tooltip","setToolTip","mediumTime","times","secondsTimes","map","time","splitTime","split","secondsTime","parseInt","fullTime","reduce","acc","media","length","Date","toISOString","substr","splitMediumTime","value","Number","seconds","useEffect","desc"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CountUp from \"react-countup\";\r\nimport { ToolTip } from \"../\";\r\n\r\nfunction CardClock({ data, title, toolTipConfig, className }) {\r\n  const [hours, setHours] = React.useState(0);\r\n  const [minutes, setMinutes] = React.useState(0);\r\n  const [tooltip, setToolTip] = React.useState(false);\r\n\r\n  function mediumTime(times) {\r\n    const secondsTimes = times.map((time) => {\r\n      const splitTime = time.split(\":\");\r\n      const secondsTime =\r\n        parseInt(splitTime[0]) * 3600 +\r\n        parseInt(splitTime[1]) * 60 +\r\n        parseInt(splitTime[2]);\r\n      return secondsTime;\r\n    });\r\n\r\n    const fullTime = secondsTimes.reduce(\r\n      (acc, secondsTime) => acc + secondsTime\r\n    );\r\n    const media = fullTime / times.length;\r\n    const mediumTime = new Date(media * 1000).toISOString().substr(11, 8);\r\n    const splitMediumTime = mediumTime.split(\":\").map((value) => Number(value));\r\n\r\n    return {\r\n      hours: splitMediumTime[0],\r\n      minutes: splitMediumTime[1],\r\n      seconds: splitMediumTime[2],\r\n    };\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (data && !!data[0]) {\r\n      const time = mediumTime(data);\r\n      setHours(time.hours);\r\n      setMinutes(time.minutes);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className={`bg-blackCMDC rounded-lg flex flex-col p-2 ${className}`}>\r\n      <h2 className=\"text-center text-xs font-semibold text-white mt-2\">\r\n        <span\r\n          onMouseOver={() => setToolTip(true)}\r\n          onMouseLeave={() => setToolTip(false)}\r\n        >\r\n          {title}\r\n        </span>\r\n      </h2>\r\n      <ToolTip title={toolTipConfig && toolTipConfig.title} display={toolTipConfig && tooltip} desc={toolTipConfig && toolTipConfig.desc} />\r\n      <div className=\"bg-clock-circle w-28 h-28 bg-cover m-auto flex justify-center items-center\">\r\n        <div className=\"text-xs font-bold text-white\">\r\n          <span className=\"text-xl\">\r\n            <CountUp end={hours} duration={1} />\r\n          </span>\r\n          h\r\n          <span className=\"text-xl\">\r\n            <CountUp end={minutes} duration={1} />\r\n          </span>\r\n          m\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardClock;\r\n"]},"metadata":{},"sourceType":"module"}